name: Check and Publish Consumer Contract
description: This workflow checks for uncommitted changes in the consumer contract file. This is to ensure that the contract file is up to date with the latest changes in the consumer service. If there are uncommitted changes, the workflow will fail and prompt the user to update the contract file.

inputs:
  base-dir:
    required: true
    type: string
  contract-file:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout head branch
      uses: actions/checkout@v4

    - name: Set up .NET (requires x64 architecture)
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Backup existing contract file
      shell: bash
      run: |
        echo "Backing up the existing contract file..."
        cd ${{ inputs.base-dir }}/pacts
        mv ${{ inputs.contract-file }} current-${{ inputs.contract-file }}

    - name: Run consumer contract tests and generate contract
      shell: bash
      run: |
        echo "Generating Consumer Contract..."
        cd ${{ inputs.base-dir }}
        dotnet restore
        dotnet test

    - name: Compare contract files
      shell: bash
      run: |
        echo "Comparing contract files..."
        cd ${{ inputs.base-dir }}/pacts
        if diff ${{ inputs.contract-file }} current-${{ inputs.contract-file }}; then
          echo "No uncomitted changes detected in the contract file."
        else
          echo "Uncommitted changes detected in the contract file! Please update the contract file by running the command 'dotnet test' in the pacts directory, and commit the changes."
          exit 1
        fi
